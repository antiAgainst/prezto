#
# Executes commands at the start of an interactive session.
#

# $TERM should be screen-256color when tmux is running; otherwise, xterm-256color.
if [[ -n "$TMUX" ]]; then
  export TERM=screen-256color
else
  export TERM=xterm-256color
fi

# These Powerlevel9k settings must be done before prezto loads the theme.
POWERLEVEL9K_MODE='nerdfont-complete'
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon root_indicator dir dir_writable vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status history)
POWERLEVEL9K_PROMPT_ADD_NEWLINE=false
POWERLEVEL9K_SHORTEN_DIR_LENGTH=3

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

alias lc='colorls'
alias ls='lsd --no-symlink'
alias ll='lsd -l'
alias lt='lsd --tree'

# File navigation.
alias vi='vim $(sk-tmux)'
alias nvi='nvim $(sk-tmux)'

alias o='fasd -a -e open'
alias v='fasd -f -e vim'
alias nv='fasd -f -e nvim'

# Configure, build, test.
cdcmake() { cmake -GNinja -DCMAKE_BUILD_TYPE=Debug          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ "$@" }
crcmake() { cmake -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ "$@" }
gdcmake() { cmake -GNinja -DCMAKE_BUILD_TYPE=Debug          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_C_COMPILER=gcc   -DCMAKE_CXX_COMPILER=g++     "$@" }
grcmake() { cmake -GNinja -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_C_COMPILER=gcc   -DCMAKE_CXX_COMPILER=g++     "$@" }

mlir_cmake() {
  if (( $# < 2 ))
  then
    echo usage: "$1 <source-dir> <build-type> [shared] [c-compiler] [cxx-compiler]"
    return 1
  fi

  if [[ "$3" == "shared" ]]
  then
    shared=ON
  else
    shared=OFF
  fi

  cmake $1 -GNinja \
    -DCMAKE_BUILD_TYPE=$2 \
    -DBUILD_SHARED_LIBS=${shared} \
    -DCMAKE_C_COMPILER=${4:=clang} \
    -DCMAKE_CXX_COMPILER=${5:=clang++} \
    -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
    -DLLVM_ENABLE_PROJECTS=mlir \
    -DLLVM_BUILD_EXAMPLES=ON \
    -DLLVM_TARGETS_TO_BUILD="host" \
    -DLLVM_ENABLE_ASSERTIONS=ON \
    -DLLVM_ENABLE_LLD=ON \
    -DMLIR_VULKAN_RUNNER_ENABLED=1
}

iree_cpu_ctest() {
  VK_ICD_FILENAMES=$HOME/vulkan/swiftshader/build/Linux/vk_swiftshader_icd.json \
  VK_LAYER_PATH=$HOME/vulkan/Vulkan-ExtensionLayer/build/layers:$VK_LAYER_PATH  \
  ctest "$@"
}
